name: CI

on:
  push:
    branches:
      - master

permissions:
  id-token: write
  contents: read

jobs:
  build:
    name: "Deploy and Push"
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      # Setup de ambientes
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.24.2"

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.19.1
      - run: |
          cd invoice-service-js 
          npm install

      - name: Generate tag
        id: generate_tag
        # Boa prática usar os 7 primeiro caracteres do SHA do commit como tag da imagem
        # Também é boa prática jogar a variável de ambiente para o output do step
        run: |
          SHA=$(echo $GITHUB_SHA | head -c 7)
          echo "sha=$SHA" >> $GITHUB_OUTPUT

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4.3.1
        with:
          role-to-assume: ${{ secrets.AWS_ECR_ROLE_ARN }}
          aws-region: us-east-1

      - name: Login to AWS ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build GO image
        id: build-go-image
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          TAG: ${{ steps.generate_tag.outputs.sha }}
        run: |
          docker build -t $REGISTRY/order-service-go:$TAG ./order-service-go/.
          docker push $REGISTRY/order-service-go:$TAG
          docker tag $REGISTRY/order-service-go:$TAG $REGISTRY/order-service-go:latest
          docker push $REGISTRY/order-service-go:latest
        # IMAGE=$(echo $REGISTRY/order-service-go:$TAG)
        # echo "image=$IMAGE" >> $GITHUB_OUTPUT

      - name: Build JS image
        id: build-js-image
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          TAG: ${{ steps.generate_tag.outputs.sha }}
        run: |
          docker build -t $REGISTRY/invoice-service-js:$TAG ./invoice-service-js/.
          docker push $REGISTRY/invoice-service-js:$TAG
          docker tag $REGISTRY/invoice-service-js:$TAG $REGISTRY/invoice-service-js:latest
          docker push $REGISTRY/invoice-service-js:latest
        # IMAGE=$(echo $REGISTRY/invoice-service-js:$TAG)
        # echo "image=$IMAGE" >> $GITHUB_OUTPUT

      - name: SSH Agent + Exec Script
        env:
          USER: ${{ secrets.EC2_USER }}
          HOST: ${{ secrets.EC2_HOST }}
          PRIVATE_KEY: ${{ secrets.EC2_PRIVATE_KEY }}
        run: |
          mkdir -p ~/.ssh
          echo "$PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H github.com >> ~/.ssh/known_hosts
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa $USER@$HOST "~/.scripts/devops-api-cd.sh"

      # - name: Deploy to App Runner
      #   id: deploy-app-runner
      #   uses: awslabs/amazon-app-runner-deploy@main
      #   with:
      #     service: order-service-go
      #     image: ${{ steps.build-go-image.outputs.image }}
      #     access-role-arn: ${{ secrets.AWS_APP_RUNNER_ROLE_ARN }}
      #     region: us-east-1
      #     cpu: 1
      #     memory: 2
      #     port: 3000

      # - name: App Runner Check
      #   run: echo "App Runner running... ${{ steps.deploy-app-runner.outputs.service-url }}"

      #? Fluxo para subir no Docker Hub
      #
      # - name: Login into container registry
      #   uses: docker/login-action@v3
      #   with:
      #     username: ${{ secrets.DOCKERHUB_USERNAME }}
      #     password: ${{ secrets.DOCKERHUB_TOKEN }}

      # - name: Build and Push
      #   uses: docker/build-push-action@v6
      #   with:
      #     context: ./invoice-service-js/.
      #     push: true
      #     # Pushing duas tags por boa prática, a tag do commit e latest
      #     tags: xanderdn/invoice-service-js:${{ steps.generate_tag.outputs.sha }},xanderdn/invoice-service-js:latest
